{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///delegated ./node_modules/three/build/three.module.js from dll-reference vendor_78d002047907e32b5251","webpack:///external \"vendor_78d002047907e32b5251\"","webpack:///delegated ./node_modules/three-orbitcontrols/OrbitControls.js from dll-reference vendor_78d002047907e32b5251","webpack:///./test/initScene.js","webpack:///./test/Maze.js","webpack:///./test/keyboard.js","webpack:///./test/Car.js","webpack:///./test/HUD.js","webpack:///./test/main.js","webpack:///./test/NPC.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","vendor_78d002047907e32b5251","scene","Maze","width","thickness","wallHeight","_classCallCheck","this","row","col","wall","graph","initMaze","console","log","initData","topWall","THREE","bottomWall","leftWall","rightWall","position","set","add","push","temp","Array","fill","length","wallclone","x","z","y","rotation","Math","PI","left","right","mazeData","isRow","frontPoint","nextPoint","indexOf","top","bottom","sets","walls","j","choose","floor","random","a","b","Union_set","pop","find","data","splice","pushInGraph","KeyboardState","document","addEventListener","onKeyDown","onKeyUp","k","8","9","13","16","17","18","27","32","33","34","35","36","37","38","39","40","45","46","186","187","188","189","190","191","219","220","221","222","status","keyName","keyCode","String","fromCharCode","event","preventDefault","pressed","down","up","updatedPreviously","update","debug","list","arg","Car","maze","bodycolor","startCell","arguments","undefined","camera","Car_classCallCheck","nowCell","body","buildBody","rot","speed","lookAt","clone","sub","copy","getNodeToPos","color","dt","keyboard","vel","applyAxisAngle","nextPos","multiplyScalar","checkNextPos","mazeWidth","mazeDepth","dir","nextCell","check","HUD","target","HUD_classCallCheck","initHUD","cameraHUD2","sceneHUD","cameraHUD1","lineGeo","vertices","line","renderer","clock","hud","car","npc","npc2","NPC","_this","traversMode","NPC_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","NPCStateTable","freeze","initState","findNextPoint","GoToPoint","NPCState","isTraverse","targetNode","stackPath","frontNode","traversModeTable","node","normalize","acos","res","findNextPoint_Left","findNextPoint_Right","raycaster","mouse","pickables","window","innerWidth","height","innerHeight","aspect","updateProjectionMatrix","setSize","e","clientX","clientY","setFromCamera","intersects","intersectObjects","remove","removeWall","setClearColor","autoClear","appendChild","domElement","forEach","plane","init","animate","getDelta","requestAnimationFrame","WW","HH","setScissorTest","setViewport","setScissor","clear","render"],"mappings":"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","file":"main.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = (__webpack_require__(1))(0);","module.exports = vendor_78d002047907e32b5251;","module.exports = (__webpack_require__(1))(2);","import * as THREE from 'three'\r\n\r\nvar scene;\r\n\r\nfunction initScene(){\r\n    scene = new THREE.Scene();\r\n}\r\n\r\nexport {scene, initScene}","import * as THREE from 'three'\r\nimport {scene} from './initScene.js'\r\n\r\nclass Maze{\r\n    // 製作一個M X N的迷宮，每個寬度為width，牆壁厚度為thickness，其高度為wallHeight\r\n    constructor(m,n,width,thickness,wallHeight){\r\n        this.m = m;\r\n        this.n = n;\r\n        this.width = width;\r\n        this.thickness = thickness;\r\n        this.wallHeight = wallHeight;\r\n        this.row = [];\r\n        this.col = [];\r\n        this.wall = [];\r\n        this.graph = [];\r\n\r\n        this.initMaze(m,n,width,thickness,wallHeight);\r\n\r\n\r\n        console.log(this.graph);\r\n    }\r\n\r\n    initMaze(m,n,width,thickness,wallHeight){\r\n        this.initData(m,n);\r\n\r\n        //var totalinWall = new THREE.Object3D();\r\n        //var mat = new THREE.MeshNormalMaterial();\r\n        var topWall = new THREE.Mesh(new THREE.BoxGeometry(n * width,wallHeight,thickness),new THREE.MeshNormalMaterial());\r\n        var bottomWall = new THREE.Mesh(new THREE.BoxGeometry(n * width,wallHeight,thickness),new THREE.MeshNormalMaterial());\r\n        var leftWall = new THREE.Mesh(new THREE.BoxGeometry(thickness,wallHeight,m * width),new THREE.MeshNormalMaterial());\r\n        var rightWall = new THREE.Mesh(new THREE.BoxGeometry(thickness,wallHeight,m * width),new THREE.MeshNormalMaterial());\r\n        \r\n        topWall.position.set(n * width / 2,wallHeight / 2,0);\r\n        bottomWall.position.set(n * width / 2,wallHeight / 2,m * width);\r\n        leftWall.position.set(0,wallHeight / 2,m * width / 2);\r\n        rightWall.position.set(n * width, wallHeight / 2, m * width / 2);\r\n\r\n        scene.add(topWall,bottomWall,leftWall,rightWall);\r\n        this.wall.push(topWall,bottomWall,leftWall,rightWall);\r\n\r\n        var i;\r\n        /*init Graph use adjency list*/\r\n        \r\n        for(i = 0; i < m * n; i++){\r\n            var temp = new Array(4);\r\n            temp.fill(null);\r\n\r\n            if(i - n >= 0) // top\r\n                temp[0] = i - n;\r\n            if(i % n !== 0) // left\r\n                temp[1] = i - 1;\r\n            if(i + n < m * n) // bottom\r\n                temp[2] = i + n; \r\n            if((i + 1) % n !== 0) // right\r\n                temp[3] = i + 1;\r\n            \r\n            this.graph.push(temp);\r\n        }\r\n        \r\n        ///////////row/////////////\r\n        for (i = 0; i < this.row.length; i++) {\r\n            let wallclone = new THREE.Mesh(new THREE.BoxGeometry(width, wallHeight, thickness), new THREE.MeshNormalMaterial());\r\n            wallclone.position.x = (this.row[i][1]) * width;\r\n            wallclone.position.z = this.row[i][0] * width + (width / 2);\r\n            wallclone.position.y = wallHeight / 2;\r\n            wallclone.rotation.y = Math.PI / 2;\r\n\r\n            // update graph\r\n            let left = (this.row[i][1] - 1) + n * this.row[i][0];\r\n            let right = this.row[i][1] + n * this.row[i][0];\r\n\r\n            wallclone.mazeData = {\r\n                isRow: true,\r\n                frontPoint: left,\r\n                nextPoint: right\r\n            }\r\n\r\n            this.wall.push(wallclone);\r\n            scene.add(wallclone);\r\n\r\n            this.graph[left][this.graph[left].indexOf(right)] = null;\r\n            this.graph[right][this.graph[right].indexOf(left)] = null;\r\n        }\r\n        ////////////////col/////////////////////  \r\n        for (i = 0; i < this.col.length; i++) {\r\n            let wallclone = new THREE.Mesh(new THREE.BoxGeometry(width, wallHeight, thickness), new THREE.MeshNormalMaterial());\r\n            wallclone.position.z = (this.col[i][1]) * width;\r\n            wallclone.position.x = this.col[i][0] * width + (width / 2);\r\n            wallclone.position.y = wallHeight / 2;\r\n            //wallclone.rotation.y = Math.PI/2;\r\n\r\n            // update graph\r\n            let top = (this.col[i][1] - 1) * n + this.col[i][0];\r\n            let bottom = this.col[i][1] * n + this.col[i][0];\r\n\r\n            wallclone.mazeData = {\r\n                isRow: false,\r\n                frontPoint: top,\r\n                nextPoint: bottom\r\n            }\r\n\r\n            this.wall.push(wallclone);\r\n            scene.add(wallclone);\r\n\r\n            this.graph[top][this.graph[top].indexOf(bottom)] = null;\r\n            this.graph[bottom][this.graph[bottom].indexOf(top)] = null;\r\n        }\r\n    }\r\n\r\n    // use kruskal's algorithm\r\n    initData(m,n){\r\n        var sets = [];\r\n        var walls = [];\r\n\r\n        for(let i = 0; i < m * n; i++)\r\n            sets.push(i);\r\n        \r\n        for(let i = 0; i < m; i++){\r\n            for(let j = 1; j < n; j++){\r\n                walls.push([0,i,j]);\r\n            }\r\n        }\r\n\r\n        for(let i = 0; i < n; i++){\r\n            for(let j = 1; j < m; j++){\r\n                walls.push([1,i,j]);\r\n            }\r\n        }\r\n\r\n        while(walls.length > 0){\r\n            let choose = Math.floor((walls.length * Math.random()));\r\n            let a,b;\r\n\r\n            //console.log('walls length: ' + walls.length);\r\n            //console.log('choose:' + choose);\r\n            if(walls[choose][0] === 0){\r\n                a = walls[choose][1] * n + walls[choose][2] - 1;\r\n                b = walls[choose][1] * n + walls[choose][2];\r\n            }\r\n            else {\r\n                a = (walls[choose][2] - 1) * n + walls[choose][1];\r\n                b = walls[choose][2] * n + walls[choose][1];\r\n            }\r\n\r\n            if(sets[a] === -1 || sets[b] === -1 || !Union_set(a,b)){\r\n                if(walls[choose][0] === 0)\r\n                    this.row.push([walls[choose][1],walls[choose][2]]);\r\n                else\r\n                    this.col.push([walls[choose][1],walls[choose][2]]);\r\n            }\r\n            \r\n            let temp = walls[choose];\r\n            walls[choose] = walls[walls.length - 1];\r\n            walls[walls.length - 1] = temp;\r\n\r\n            walls.pop();\r\n        }\r\n\r\n\r\n        function Union_set(x,y){\r\n            var a = find(x);\r\n            var b = find(y);\r\n\r\n            if(a !== b){\r\n                sets[b] = a;\r\n                return true;\r\n            }\r\n            else return false;\r\n        }\r\n\r\n        function find(n){\r\n            if(n == sets[n])\r\n                return n;\r\n            return sets[n] = find(sets[n]);\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n        data = {isRow, frontPoint, nextPoint}\r\n    */\r\n    removeWall(data){       //還沒做出row,col的刪除，pickable的刪除狀況，\r\n        let a = data.frontPoint;\r\n        let b = data.nextPoint;\r\n\r\n        \r\n        let x = Math.floor(a / this.n);\r\n        let y = a % this.n + 1;\r\n\r\n        if(b - a === 1){\r\n            let i;\r\n            for(i = 0; i < this.row.length; i++)\r\n                if(this.row[i][0] === x && this.row[i][1] === y)\r\n                    break;\r\n            this.row.splice(i,1);\r\n        }\r\n        else {\r\n            let i;\r\n            for(i = 0; i < this.col.length; i++)\r\n                if(this.col[i][0] === x && this.col[i][1] === y)\r\n                    break;\r\n            this.col.splice(i,1);\r\n        }\r\n\r\n        this.pushInGraph(a,b);\r\n        this.pushInGraph(b,a);\r\n        return;\r\n        var start = a;\r\n\r\n        var path = [];\r\n        for(let i = 0; i < 4; i++){\r\n            if(this.graph[a][i] !== null){\r\n                let x = DFS(this.graph,a,this.graph[a][i]);\r\n                if(x !== -1){\r\n                    path.push(x);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        let choose = Math.floor((path.length * Math.random()));\r\n        if(choose + 1 === path.length){\r\n            a = path[choose];\r\n            b = path[0];\r\n        }\r\n        else {\r\n            a = path[choose];\r\n            b = path[choose + 1];\r\n        }\r\n\r\n        if(a > b){\r\n            let temp = a;\r\n            a = b;\r\n            b = temp;\r\n        }\r\n\r\n        this.graph[a][this.graph[a].indexOf(b)] = null;\r\n        this.graph[b][this.graph[b].indexOf(a)] = null;\r\n        \r\n        let wallclone = new THREE.Mesh(new THREE.BoxGeometry(this.width, this.wallHeight, this.thickness), new THREE.MeshNormalMaterial());\r\n\r\n        if(b - a === 1){      //add row\r\n            let x = Math.floor(a / this.n);\r\n            let y = a % this.n + 1;\r\n            \r\n\r\n            this.row.push([x,y]);\r\n            \r\n            wallclone.position.x = y * this.width;\r\n            wallclone.position.z = x * this.width + (this.width / 2);\r\n            wallclone.position.y = this.wallHeight / 2;\r\n            wallclone.rotation.y = Math.PI / 2;\r\n\r\n            wallclone.mazeData = {\r\n                isRow: true,\r\n                frontPoint: a,\r\n                nextPoint: b\r\n            }\r\n        }\r\n        else {          //add col\r\n            let x = a % this.n;\r\n            let y = Math.floor(a / this.n) + 1;\r\n\r\n            this.col.push([x,y]);\r\n\r\n            wallclone.position.z = y * this.width;\r\n            wallclone.position.x = x * this.width + (this.width / 2);\r\n            wallclone.position.y = this.wallHeight / 2;\r\n\r\n            wallclone.mazeData = {\r\n                isRow: false,\r\n                frontPoint: a,\r\n                nextPoint: b\r\n            }\r\n        }\r\n        \r\n        scene.add(wallclone);\r\n        this.wall.push(wallclone);\r\n\r\n        function DFS(data,front,now){\r\n            console.log(now);\r\n            if(now === start)return now;\r\n            else {\r\n                for(let i = 0; i < 4; i++){\r\n                    if(data[now][i] !== null && data[now][i] !== front){\r\n                        var x = DFS(data,now,data[now][i]);\r\n\r\n                        if(x !== -1){\r\n                            path.push(x);\r\n                            return now;\r\n                        }\r\n                    }\r\n                }\r\n                return -1;\r\n            }\r\n        }\r\n    }\r\n\r\n    check(a,b){\r\n        if(this.graph[a].indexOf(b) < 0)\r\n            return false;\r\n        return true;\r\n    }\r\n\r\n    getNodeToPos(n){\r\n        let x = (n % this.n * this.width) + this.width / 2;\r\n        let z = (Math.floor(n / this.n) * this.width) + this.width / 2;\r\n        \r\n        return new THREE.Vector3(x,0,z);\r\n    }\r\n\r\n    pushInGraph(a,b){\r\n        if(a - this.n === b)\r\n            this.graph[a][0] = b;\r\n        else if(a - 1 === b)\r\n            this.graph[a][1] = b;\r\n        else if(a + this.n === b)\r\n            this.graph[a][2] = b;\r\n        else if(a + 1 === b)\r\n            this.graph[a][3] = b;\r\n        else console.log(\"pushInGraph function Error!!!\");\r\n    }\r\n}\r\n\r\nexport {Maze}","/**\r\n * @author Lee Stemkoski\r\n *\r\n * Usage:\r\n * (1) create a global variable:\r\n *      var keyboard = new KeyboardState();\r\n * (2) during main loop:\r\n *       keyboard.update();\r\n * (3) check state of keys:\r\n *       keyboard.down(\"A\")    -- true for one update cycle after key is pressed\r\n *       keyboard.pressed(\"A\") -- true as long as key is being pressed\r\n *       keyboard.up(\"A\")      -- true for one update cycle after key is released\r\n *\r\n *  See KeyboardState.k object data below for names of keys whose state can be polled\r\n */\r\n\r\n// initialization\r\nvar KeyboardState = function()\r\n{\r\n    // bind keyEvents\r\n    document.addEventListener(\"keydown\", KeyboardState.onKeyDown, false);\r\n    document.addEventListener(\"keyup\",   KeyboardState.onKeyUp,   false);\r\n}\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\nKeyboardState.k =\r\n    {\r\n        8: \"backspace\",  9: \"tab\",       13: \"enter\",    16: \"shift\",\r\n        17: \"ctrl\",     18: \"alt\",       27: \"esc\",      32: \"space\",\r\n        33: \"pageup\",   34: \"pagedown\",  35: \"end\",      36: \"home\",\r\n        37: \"left\",     38: \"up\",        39: \"right\",    40: \"down\",\r\n        45: \"insert\",   46: \"delete\",   186: \";\",       187: \"=\",\r\n        188: \",\",      189: \"-\",        190: \".\",       191: \"/\",\r\n        219: \"[\",      220: \"\\\\\",       221: \"]\",       222: \"'\"\r\n    }\r\n\r\nKeyboardState.status = {};\r\n\r\nKeyboardState.keyName = function ( keyCode )\r\n{\r\n    return ( KeyboardState.k[keyCode] != null ) ?\r\n        KeyboardState.k[keyCode] :\r\n        String.fromCharCode(keyCode);\r\n}\r\n\r\nKeyboardState.onKeyUp = function(event)\r\n{\r\n    event.preventDefault();\r\n    var key = KeyboardState.keyName(event.keyCode);\r\n    if ( KeyboardState.status[key] )\r\n        KeyboardState.status[key].pressed = false;\r\n}\r\n\r\nKeyboardState.onKeyDown = function(event)\r\n{\r\n    event.preventDefault();\r\n    var key = KeyboardState.keyName(event.keyCode);\r\n    if ( !KeyboardState.status[key] )\r\n        KeyboardState.status[key] = { down: false, pressed: false, up: false, updatedPreviously: false };\r\n}\r\n\r\nKeyboardState.prototype.update = function()\r\n{\r\n    for (var key in KeyboardState.status)\r\n    {\r\n        // insure that every keypress has \"down\" status exactly once\r\n        if ( !KeyboardState.status[key].updatedPreviously )\r\n        {\r\n            KeyboardState.status[key].down        \t\t= true;\r\n            KeyboardState.status[key].pressed     \t\t= true;\r\n            KeyboardState.status[key].updatedPreviously = true;\r\n        }\r\n        else // updated previously\r\n        {\r\n            KeyboardState.status[key].down = false;\r\n        }\r\n\r\n        // key has been flagged as \"up\" since last update\r\n        if ( KeyboardState.status[key].up )\r\n        {\r\n            delete KeyboardState.status[key];\r\n            continue; // move on to next key\r\n        }\r\n\r\n        if ( !KeyboardState.status[key].pressed ) // key released\r\n            KeyboardState.status[key].up = true;\r\n    }\r\n}\r\n\r\nKeyboardState.prototype.down = function(keyName)\r\n{\r\n    return (KeyboardState.status[keyName] && KeyboardState.status[keyName].down);\r\n}\r\n\r\nKeyboardState.prototype.pressed = function(keyName)\r\n{\r\n    return (KeyboardState.status[keyName] && KeyboardState.status[keyName].pressed);\r\n}\r\n\r\nKeyboardState.prototype.up = function(keyName)\r\n{\r\n    return (KeyboardState.status[keyName] && KeyboardState.status[keyName].up);\r\n}\r\n\r\nKeyboardState.prototype.debug = function()\r\n{\r\n    var list = \"Keys active: \";\r\n    for (var arg in KeyboardState.status)\r\n        list += \" \" + arg\r\n    console.log(list);\r\n}\r\n\r\nexport default KeyboardState\r\n\r\n///////////////////////////////////////////////////////////////////////////////","import {scene} from './initScene.js'\r\nimport * as THREE from 'three'\r\n\r\nclass Car{\r\n    constructor(maze,bodycolor,startCell = 0,camera = null){\r\n        this.nowCell = startCell;\r\n        this.width = 10;\r\n        this.body = this.buildBody(bodycolor);\r\n        this.maze = maze;\r\n        this.rot = 0;\r\n        this.speed = 0;\r\n\r\n        if(camera){\r\n            camera.position.set(-40,60,0);\r\n            camera.lookAt(this.body.position.clone().add(new THREE.Vector3(-5,100,0)).sub(camera.position));\r\n            this.body.add(camera);\r\n        }\r\n        \r\n        this.body.position.copy(this.maze.getNodeToPos(startCell));\r\n\r\n        scene.add(this.body);\r\n    }\r\n\r\n    buildBody(bodycolor){\r\n        let body = new THREE.Object3D();\r\n        let a = new THREE.Mesh(new THREE.CylinderGeometry(this.width,this.width,10,64),new THREE.MeshBasicMaterial({color: new THREE.Color(bodycolor)}));\r\n        let b = new THREE.Mesh(new THREE.BoxGeometry(this.width * 2,10,6),new THREE.MeshBasicMaterial({color: new THREE.Color(bodycolor)}));\r\n        b.position.set(this.width,0,0);\r\n        a.add(b);\r\n        a.position.y = 5;\r\n\r\n        body.add(a);\r\n\r\n        return body;\r\n    }\r\n\r\n    update(dt,keyboard){\r\n        keyboard.update();\r\n\r\n        if(keyboard.pressed('right')){\r\n            this.rot -= 0.03;\r\n        }\r\n        if(keyboard.pressed('left')){\r\n            this.rot += 0.03;\r\n        }\r\n        if(keyboard.pressed('up')){\r\n            this.speed += 0.2;\r\n        }\r\n        if(keyboard.pressed('down')){\r\n            this.speed -= 0.2;\r\n        }\r\n\r\n        let vel = new THREE.Vector3(this.speed, 0, 0);\r\n        vel.applyAxisAngle(new THREE.Vector3(0,1,0), this.rot);\r\n        \r\n        this.body.rotation.y = this.rot;\r\n        let nextPos = this.body.position.clone().add(vel.clone().multiplyScalar(dt));\r\n        if(this.checkNextPos(nextPos)){\r\n            this.body.position.add(vel.clone().multiplyScalar(dt));\r\n\r\n            let j = Math.floor(nextPos.x / this.maze.width);\r\n            let i = Math.floor(nextPos.z / this.maze.width);\r\n            this.nowCell = i * this.maze.n + j;\r\n        }\r\n        else this.speed /= 2;\r\n        \r\n    }\r\n\r\n    checkNextPos(nextPos){\r\n        let mazeWidth = this.maze.width * this.maze.n;\r\n        let mazeDepth = this.maze.width * this.maze.m;\r\n        if(nextPos.x >= 0 + this.width && nextPos.z >= 0 + this.width && nextPos.x <= mazeWidth - this.width && nextPos.z <= mazeDepth - this.width){\r\n            let dir = [[1,1],[-1,1],[1,-1],[-1,-1]];\r\n\r\n            for(let k = 0; k < 4; k++){\r\n                let j = Math.floor((nextPos.x + dir[k][0] * this.width) / this.maze.width);\r\n                let i = Math.floor((nextPos.z + dir[k][1] * this.width) / this.maze.width);\r\n\r\n                let nextCell = i * this.maze.n + j;\r\n                if(nextCell !== this.nowCell && !this.maze.check(nextCell,this.nowCell))\r\n                    return false;\r\n            }\r\n            \r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n\r\nexport default Car;","import * as THREE from 'three'\r\n\r\nclass HUD{\r\n    constructor(target) {\r\n        this.initHUD();\r\n\r\n        target.add(this.cameraHUD2);\r\n    }\r\n\r\n    initHUD(){\r\n        this.sceneHUD = new THREE.Scene();\r\n        this.cameraHUD1 = new THREE.OrthographicCamera(-10.1,10.1,10.1,-10.1,1,50);\r\n        this.cameraHUD2 = new THREE.OrthographicCamera(-250, 250, 250, -250, -350, 350);\r\n        this.cameraHUD2.position.set(0,15,0);\r\n        this.cameraHUD2.up.set(1,0,0);\r\n        this.cameraHUD2.lookAt(new THREE.Vector3());\r\n\r\n\r\n        var lineGeo = new THREE.Geometry();\r\n        lineGeo.vertices.push(\r\n            new THREE.Vector3(-10,-10,0),\r\n            new THREE.Vector3(10,-10,0),\r\n            new THREE.Vector3(10,10,0),\r\n            new THREE.Vector3(-10,10,0),\r\n            new THREE.Vector3(-10,-10,0),\r\n        );\r\n\r\n        var line = new THREE.Line(lineGeo, new THREE.LineBasicMaterial({color: 0xffffff}));\r\n        this.sceneHUD.add(line);\r\n    }\r\n}\r\n\r\nexport default HUD","import * as THREE from 'three'\r\nimport OrbitControls from 'three-orbitcontrols'\r\nimport {scene, initScene} from './initScene.js'\r\nimport {Maze} from './Maze.js'\r\nimport KeyboardState from './keyboard.js'\r\nimport Car from './Car.js'\r\nimport HUD from './HUD.js'\r\nimport NPC from './NPC.js'\r\n\r\nvar camera, renderer, stats, clock, controls, maze, hud;\r\nvar raycaster = new THREE.Raycaster(), mouse = new THREE.Vector2(),pickables = [];\r\nvar car, npc, npc2;\r\nvar keyboard = new KeyboardState();\r\n\r\nwindow.addEventListener('resize', onWindowResize, false);\r\ndocument.addEventListener('mousedown',onMouseDown,false);\r\n\r\ninit();\r\nanimate();\r\n\r\nfunction init() {\r\n\tinitScene();\r\n\t\r\n    clock = new THREE.Clock();\r\n\r\n    camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 10, 10000);\r\n    scene.add(camera);\r\n\r\n    var gridXZ = new THREE.GridHelper(500, 10, 'red', 'white');\r\n    //scene.add(gridXZ);\r\n    gridXZ.position.set(250, 0, 250);\r\n    //gridXZ.rotation.x = Math.PI / 2;\r\n    scene.add(new THREE.AxisHelper(50));\r\n\r\n\r\n    renderer = new THREE.WebGLRenderer();\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.setClearColor(0x888888);\r\n    renderer.autoClear = false;\r\n\r\n    //controls = new OrbitControls(camera, renderer.domElement);\r\n    //controls.enableKeys = false;\r\n\r\n    document.body.appendChild(renderer.domElement);\r\n\t\r\n    maze = new Maze(5,5,50,5,50);\r\n    \r\n    maze.wall.forEach(function(e){\r\n        pickables.push(e);\r\n    });\r\n\r\n    car = new Car(maze,'green',0,camera);\r\n    hud = new HUD(car.body);\r\n    ////\r\n    let t = new THREE.Mesh(new THREE.CylinderGeometry(15,15,100,64), new THREE.MeshBasicMaterial({color: 0x0000ff}));\r\n    t.position.set(475,50,475);\r\n\r\n    scene.add(t);\r\n\r\n    let plane = new THREE.Mesh(new THREE.PlaneGeometry(500,500), new THREE.MeshBasicMaterial({color: 0xc6793c}))\r\n    plane.rotation.x = -Math.PI / 2;\r\n    plane.position.set(250,0,250);\r\n    scene.add(plane);\r\n    ////\r\n\r\n    npc = new NPC(maze,'red',5,0);\r\n    npc2 = new NPC(maze,'blue',13,1);\r\n}\r\n\r\nfunction onWindowResize() {\r\n    var width = window.innerWidth;\r\n    var height = window.innerHeight;\r\n    camera.aspect = width / height;\r\n    camera.updateProjectionMatrix();\r\n    renderer.setSize(width, height);\r\n}\r\n\r\nfunction animate() {\r\n    var dt = clock.getDelta();\r\n    car.update(dt,keyboard);\r\n    npc2.update(dt);\r\n    npc.update(dt);\r\n\r\n    requestAnimationFrame(animate);\r\n    render();\r\n}\r\n\r\nfunction render() {\r\n    var WW = window.innerWidth;\r\n    var HH = window.innerHeight;\r\n\r\n    renderer.setScissorTest(true);\r\n    renderer.setViewport(0,0,WW,HH);\r\n    renderer.setScissor(0,0,WW,HH);\r\n    renderer.clear();\r\n    renderer.render(scene,camera);\r\n\r\n    renderer.setViewport(WW * 0.7, 0, WW * 0.3, HH * 0.3);\r\n    renderer.setScissor(WW * 0.7, 0, WW * 0.3, HH * 0.3);\r\n    renderer.clear();\r\n    renderer.render(scene,hud.cameraHUD2);\r\n    renderer.render(hud.sceneHUD,hud.cameraHUD1);\r\n}\r\n\r\nfunction onMouseDown(e){\r\n    e.preventDefault();\r\n    mouse.x = (e.clientX / window.innerWidth) * 2 - 1;\r\n    mouse.y = -(e.clientY / window.innerHeight) * 2 + 1;\r\n\r\n    raycaster.setFromCamera(mouse, camera);\r\n    var intersects = raycaster.intersectObjects(pickables);\r\n    if(intersects.length > 0){\r\n        console.log(intersects[0]);\r\n        \r\n        if('mazeData' in intersects[0].object){\r\n            scene.remove(intersects[0].object);\r\n            maze.removeWall(intersects[0].object.mazeData);\r\n        }\r\n        \r\n    }\r\n\r\n}","import * as THREE from 'three'\r\nimport {scene} from './initScene.js'\r\nimport Car from './Car.js'\r\n\r\nclass NPC extends Car{\r\n    constructor(maze,bodycolor,startCell = 0, traversMode = 0,camera = null){\r\n        super(maze,bodycolor,startCell,camera);\r\n\r\n        this.NPCStateTable = Object.freeze({\"initState\" : 1,\"findNextPoint\" : 2,\"GoToPoint\" : 3});\r\n        this.NPCState = this.NPCStateTable.initState;\r\n        this.isTraverse = new Array(maze.m * maze.n);\r\n        this.targetNode = new THREE.Vector3();\r\n        this.target = 0;\r\n        this.stackPath = [];        // use to random DFS\r\n        this.frontNode = -1;        // use to left traverse\r\n        this.speed = 60;\r\n        this.traversMode = traversMode;\r\n        this.traversModeTable = Object.freeze({\"left\": 0,\"right\": 1,\"random\": 2});\r\n    }\r\n\r\n    // use random DFS, it can't use to dynamic maze, except init all traversal\r\n    findNextPoint_Random(){\r\n        this.isTraverse[this.nowCell] = true;\r\n\r\n        let node, find = false;\r\n        for(let i = 0; i < this.maze.graph[this.nowCell].length; i++){\r\n            if(this.maze.graph[this.nowCell][i] !== null && !this.isTraverse[this.maze.graph[this.nowCell][i]]){\r\n                this.stackPath.push(this.nowCell);\r\n                node = this.maze.graph[this.nowCell][i];\r\n                find = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(!find && this.stackPath.length == 0){\r\n            return false;\r\n        }\r\n        else if(!find){\r\n            node = this.stackPath[this.stackPath.length - 1]\r\n            this.stackPath.pop();\r\n        }\r\n\r\n        this.target = node;\r\n        this.targetNode.copy(this.maze.getNodeToPos(node));\r\n\r\n        return true;\r\n    }\r\n\r\n    // use Left, it can use to dynamic maze\r\n    findNextPoint_Left(){\r\n        let node;\r\n        \r\n        node = (this.maze.graph[this.nowCell].indexOf(this.frontNode) + 3) % 4;\r\n        for(let i = 0; i < 4; i++, node = (node + 3) % 4){\r\n            if(this.maze.graph[this.nowCell][node] !== null)\r\n                break;\r\n        }\r\n        \r\n        this.frontNode = this.nowCell;\r\n        this.target = this.maze.graph[this.nowCell][node];\r\n        this.targetNode.copy(this.maze.getNodeToPos(this.target));\r\n\r\n\r\n        return true;\r\n    }\r\n\r\n    findNextPoint_Right(){\r\n        let node;\r\n        \r\n        node = (this.maze.graph[this.nowCell].indexOf(this.frontNode) + 1) % 4;\r\n        for(let i = 0; i < 4; i++, node = (node + 1) % 4){\r\n            if(this.maze.graph[this.nowCell][node] !== null)\r\n                break;\r\n        }\r\n        \r\n        this.frontNode = this.nowCell;\r\n        this.target = this.maze.graph[this.nowCell][node];\r\n        this.targetNode.copy(this.maze.getNodeToPos(this.target));\r\n\r\n\r\n        return true;\r\n    }\r\n\r\n    GoToPoint(dt){\r\n        let vel = this.targetNode.clone().sub(this.body.position).normalize().multiplyScalar(dt * this.speed);\r\n        \r\n        this.body.position.add(vel);\r\n\r\n        this.body.rotation.y = Math.acos(vel.x / vel.length());\r\n        if(vel.z > 0)\r\n            this.body.rotation.y *= -1;\r\n\r\n        if(this.targetNode.clone().sub(this.body.position).length() < 3){\r\n            this.nowCell = this.target;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    update(dt){\r\n        let res;\r\n        switch (this.NPCState) {\r\n            case this.NPCStateTable.initState:\r\n                this.isTraverse.fill(false);\r\n                this.isTraverse[this.nowCell] = true;\r\n                this.NPCState = this.NPCStateTable.findNextPoint;\r\n            case this.NPCStateTable.findNextPoint:\r\n                switch(this.traversMode){\r\n                    case this.traversModeTable.left:\r\n                        res = this.findNextPoint_Left();\r\n                    break;\r\n                    case this.traversModeTable.right:\r\n                        res = this.findNextPoint_Right();\r\n                    break;\r\n                }\r\n                if(res)\r\n                    this.NPCState = this.NPCStateTable.GoToPoint;\r\n                else {\r\n                    this.NPCState = this.NPCStateTable.initState;\r\n                    break;\r\n                }\r\n                    \r\n            case this.NPCStateTable.GoToPoint:\r\n                res = this.GoToPoint(dt);\r\n                if(res)\r\n                    this.NPCState = this.NPCStateTable.findNextPoint;\r\n            break;\r\n        }\r\n    }\r\n}\r\n\r\nexport default NPC"],"sourceRoot":""}