{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///delegated ./node_modules/three/build/three.module.js from dll-reference vendor_78d002047907e32b5251","webpack:///external \"vendor_78d002047907e32b5251\"","webpack:///delegated ./node_modules/three-orbitcontrols/OrbitControls.js from dll-reference vendor_78d002047907e32b5251","webpack:///./test/initScene.js","webpack:///./test/Maze.js","webpack:///./test/keyboard.js","webpack:///./test/Car.js","webpack:///./test/HUD.js","webpack:///./test/main.js","webpack:///./test/NPC.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","vendor_78d002047907e32b5251","scene","Maze","width","thickness","wallHeight","_classCallCheck","this","row","col","wall","graph","initMaze","console","log","initData","topWall","THREE","bottomWall","leftWall","rightWall","position","set","add","push","temp","length","wallclone","x","z","y","rotation","Math","PI","left","right","mazeData","isRow","frontPoint","nextPoint","splice","indexOf","top","bottom","sets","walls","j","choose","floor","random","a","b","Union_set","pop","find","data","start","path","DFS","front","now","KeyboardState","document","addEventListener","onKeyDown","onKeyUp","k","8","9","13","16","17","18","27","32","33","34","35","36","37","38","39","40","45","46","186","187","188","189","190","191","219","220","221","222","status","keyName","keyCode","String","fromCharCode","event","preventDefault","pressed","down","up","updatedPreviously","update","debug","list","arg","Car","maze","camera","arguments","undefined","startCell","Car_classCallCheck","nowCell","body","buildBody","rot","speed","lookAt","clone","sub","copy","getNodeToPos","dt","keyboard","vel","applyAxisAngle","nextPos","multiplyScalar","checkNextPos","mazeWidth","mazeDepth","dir","nextCell","check","HUD","target","HUD_classCallCheck","initHUD","cameraHUD2","sceneHUD","cameraHUD1","lineGeo","vertices","line","color","renderer","clock","hud","car","npc","NPC","_this","NPC_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","NPCStateTable","freeze","initState","findNextPoint","GoToPoint","NPCState","isTraverse","Array","targetNode","stackPath","node","normalize","acos","fill","raycaster","mouse","pickables","window","innerWidth","height","innerHeight","aspect","updateProjectionMatrix","setSize","e","clientX","clientY","setFromCamera","intersects","intersectObjects","remove","removeWall","setClearColor","autoClear","appendChild","domElement","forEach","plane","init","animate","getDelta","requestAnimationFrame","WW","HH","setScissorTest","setViewport","setScissor","clear","render"],"mappings":"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","file":"main.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = (__webpack_require__(1))(0);","module.exports = vendor_78d002047907e32b5251;","module.exports = (__webpack_require__(1))(2);","import * as THREE from 'three'\r\n\r\nvar scene;\r\n\r\nfunction initScene(){\r\n    scene = new THREE.Scene();\r\n}\r\n\r\nexport {scene, initScene}","import * as THREE from 'three'\r\nimport {scene} from './initScene.js'\r\n\r\nclass Maze{\r\n    // 製作一個M X N的迷宮，每個寬度為width，牆壁厚度為thickness，其高度為wallHeight\r\n    constructor(m,n,width,thickness,wallHeight){\r\n        this.m = m;\r\n        this.n = n;\r\n        this.width = width;\r\n        this.thickness = thickness;\r\n        this.wallHeight = wallHeight;\r\n        this.row = [];\r\n        this.col = [];\r\n        this.wall = [];\r\n        this.graph = [];\r\n\r\n        this.initMaze(m,n,width,thickness,wallHeight);\r\n\r\n\r\n        console.log(this.graph);\r\n    }\r\n\r\n    initMaze(m,n,width,thickness,wallHeight){\r\n        this.initData(m,n);\r\n\r\n        //var totalinWall = new THREE.Object3D();\r\n        //var mat = new THREE.MeshNormalMaterial();\r\n        var topWall = new THREE.Mesh(new THREE.BoxGeometry(n * width,wallHeight,thickness),new THREE.MeshNormalMaterial());\r\n        var bottomWall = new THREE.Mesh(new THREE.BoxGeometry(n * width,wallHeight,thickness),new THREE.MeshNormalMaterial());\r\n        var leftWall = new THREE.Mesh(new THREE.BoxGeometry(thickness,wallHeight,m * width),new THREE.MeshNormalMaterial());\r\n        var rightWall = new THREE.Mesh(new THREE.BoxGeometry(thickness,wallHeight,m * width),new THREE.MeshNormalMaterial());\r\n        \r\n        topWall.position.set(n * width / 2,wallHeight / 2,0);\r\n        bottomWall.position.set(n * width / 2,wallHeight / 2,m * width);\r\n        leftWall.position.set(0,wallHeight / 2,m * width / 2);\r\n        rightWall.position.set(n * width, wallHeight / 2, m * width / 2);\r\n\r\n        scene.add(topWall,bottomWall,leftWall,rightWall);\r\n        this.wall.push(topWall,bottomWall,leftWall,rightWall);\r\n\r\n        var i;\r\n        /*init Graph use adjency list*/\r\n        \r\n        for(i = 0; i < m * n; i++){\r\n            var temp = [];\r\n\r\n            if(i - n >= 0) // top\r\n                temp.push(i - n);\r\n            if(i % n !== 0) // left\r\n                temp.push(i - 1);\r\n            if((i + 1) % n !== 0) // right\r\n                temp.push(i + 1);\r\n            if(i + n < m * n) // bottom\r\n               temp.push(i + n); \r\n            \r\n            this.graph.push(temp);\r\n        }\r\n        \r\n        ///////////row/////////////\r\n        for (i = 0; i < this.row.length; i++) {\r\n            let wallclone = new THREE.Mesh(new THREE.BoxGeometry(width, wallHeight, thickness), new THREE.MeshNormalMaterial());\r\n            wallclone.position.x = (this.row[i][1]) * width;\r\n            wallclone.position.z = this.row[i][0] * width + (width / 2);\r\n            wallclone.position.y = wallHeight / 2;\r\n            wallclone.rotation.y = Math.PI / 2;\r\n\r\n            // update graph\r\n            let left = (this.row[i][1] - 1) + n * this.row[i][0];\r\n            let right = this.row[i][1] + n * this.row[i][0];\r\n\r\n            wallclone.mazeData = {\r\n                isRow: true,\r\n                frontPoint: left,\r\n                nextPoint: right\r\n            }\r\n\r\n            this.wall.push(wallclone);\r\n            scene.add(wallclone);\r\n\r\n            this.graph[left].splice(this.graph[left].indexOf(right),1);\r\n            this.graph[right].splice(this.graph[right].indexOf(left),1);\r\n        }\r\n        ////////////////col/////////////////////  \r\n        for (i = 0; i < this.col.length; i++) {\r\n            let wallclone = new THREE.Mesh(new THREE.BoxGeometry(width, wallHeight, thickness), new THREE.MeshNormalMaterial());\r\n            wallclone.position.z = (this.col[i][1]) * width;\r\n            wallclone.position.x = this.col[i][0] * width + (width / 2);\r\n            wallclone.position.y = wallHeight / 2;\r\n            //wallclone.rotation.y = Math.PI/2;\r\n\r\n            // update graph\r\n            let top = (this.col[i][1] - 1) * n + this.col[i][0];\r\n            let bottom = this.col[i][1] * n + this.col[i][0];\r\n\r\n            wallclone.mazeData = {\r\n                isRow: false,\r\n                frontPoint: top,\r\n                nextPoint: bottom\r\n            }\r\n\r\n            this.wall.push(wallclone);\r\n            scene.add(wallclone);\r\n\r\n            this.graph[top].splice(this.graph[top].indexOf(bottom),1);\r\n            this.graph[bottom].splice(this.graph[bottom].indexOf(top),1);\r\n        }\r\n    }\r\n\r\n    // use kruskal's algorithm\r\n    initData(m,n){\r\n        var sets = [];\r\n        var walls = [];\r\n\r\n        for(let i = 0; i < m * n; i++)\r\n            sets.push(i);\r\n        \r\n        for(let i = 0; i < m; i++){\r\n            for(let j = 1; j < n; j++){\r\n                walls.push([0,i,j]);\r\n            }\r\n        }\r\n\r\n        for(let i = 0; i < n; i++){\r\n            for(let j = 1; j < m; j++){\r\n                walls.push([1,i,j]);\r\n            }\r\n        }\r\n\r\n        while(walls.length > 0){\r\n            let choose = Math.floor((walls.length * Math.random()));\r\n            let a,b;\r\n\r\n            //console.log('walls length: ' + walls.length);\r\n            //console.log('choose:' + choose);\r\n            if(walls[choose][0] === 0){\r\n                a = walls[choose][1] * n + walls[choose][2] - 1;\r\n                b = walls[choose][1] * n + walls[choose][2];\r\n            }\r\n            else {\r\n                a = (walls[choose][2] - 1) * n + walls[choose][1];\r\n                b = walls[choose][2] * n + walls[choose][1];\r\n            }\r\n\r\n            if(sets[a] === -1 || sets[b] === -1 || !Union_set(a,b)){\r\n                if(walls[choose][0] === 0)\r\n                    this.row.push([walls[choose][1],walls[choose][2]]);\r\n                else\r\n                    this.col.push([walls[choose][1],walls[choose][2]]);\r\n            }\r\n            \r\n            let temp = walls[choose];\r\n            walls[choose] = walls[walls.length - 1];\r\n            walls[walls.length - 1] = temp;\r\n\r\n            walls.pop();\r\n        }\r\n\r\n\r\n        function Union_set(x,y){\r\n            var a = find(x);\r\n            var b = find(y);\r\n\r\n            if(a !== b){\r\n                sets[b] = a;\r\n                return true;\r\n            }\r\n            else return false;\r\n        }\r\n\r\n        function find(n){\r\n            if(n == sets[n])\r\n                return n;\r\n            return sets[n] = find(sets[n]);\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n        data = {isRow, frontPoint, nextPoint}\r\n    */\r\n    removeWall(data){       //還沒做出row,col的刪除，pickable的刪除狀況，\r\n        let a = data.frontPoint;\r\n        let b = data.nextPoint;\r\n\r\n        \r\n        let x = Math.floor(a / this.n);\r\n        let y = a % this.n + 1;\r\n\r\n        if(b - a === 1){\r\n            let i;\r\n            for(i = 0; i < this.row.length; i++)\r\n                if(this.row[i][0] === x && this.row[i][1] === y)\r\n                    break;\r\n            this.row.splice(i,1);\r\n        }\r\n        else {\r\n            let i;\r\n            for(i = 0; i < this.col.length; i++)\r\n                if(this.col[i][0] === x && this.col[i][1] === y)\r\n                    break;\r\n            this.col.splice(i,1);\r\n        }\r\n\r\n        this.graph[a].push(b);\r\n        this.graph[b].push(a);\r\n        \r\n        var start = a;\r\n\r\n        var path = [];\r\n        for(let i = 0; i < this.graph[a].length; i++){\r\n            let x = DFS(this.graph,a,this.graph[a][i]);\r\n            if(x !== -1){\r\n                path.push(x);\r\n                break;\r\n            }\r\n        }\r\n\r\n        let choose = Math.floor((path.length * Math.random()));\r\n        if(choose + 1 === path.length){\r\n            a = path[choose];\r\n            b = path[0];\r\n        }\r\n        else {\r\n            a = path[choose];\r\n            b = path[choose + 1];\r\n        }\r\n\r\n        if(a > b){\r\n            let temp = a;\r\n            a = b;\r\n            b = temp;\r\n        }\r\n\r\n        this.graph[a].splice(this.graph[a].indexOf(b),1);\r\n        this.graph[b].splice(this.graph[b].indexOf(a),1);\r\n\r\n        let wallclone = new THREE.Mesh(new THREE.BoxGeometry(this.width, this.wallHeight, this.thickness), new THREE.MeshNormalMaterial());\r\n\r\n        if(b - a === 1){      //add row\r\n            let x = Math.floor(a / this.n);\r\n            let y = a % this.n + 1;\r\n            \r\n\r\n            this.row.push([x,y]);\r\n            \r\n            wallclone.position.x = y * this.width;\r\n            wallclone.position.z = x * this.width + (this.width / 2);\r\n            wallclone.position.y = this.wallHeight / 2;\r\n            wallclone.rotation.y = Math.PI / 2;\r\n\r\n            wallclone.mazeData = {\r\n                isRow: true,\r\n                frontPoint: a,\r\n                nextPoint: b\r\n            }\r\n        }\r\n        else {          //add col\r\n            let x = a % this.n;\r\n            let y = Math.floor(a / this.n) + 1;\r\n\r\n            this.col.push([x,y]);\r\n\r\n            wallclone.position.z = y * this.width;\r\n            wallclone.position.x = x * this.width + (this.width / 2);\r\n            wallclone.position.y = this.wallHeight / 2;\r\n\r\n            wallclone.mazeData = {\r\n                isRow: false,\r\n                frontPoint: a,\r\n                nextPoint: b\r\n            }\r\n        }\r\n        \r\n        scene.add(wallclone);\r\n        this.wall.push(wallclone);\r\n\r\n        function DFS(data,front,now){\r\n            if(now === start)return now;\r\n            else {\r\n                for(let i = 0; i < data[now].length; i++){\r\n                    if(data[now][i] !== front){\r\n                        var x = DFS(data,now,data[now][i]);\r\n\r\n                        if(x !== -1){\r\n                            path.push(x);\r\n                            return now;\r\n                        }\r\n                    }\r\n                }\r\n                return -1;\r\n            }\r\n        }\r\n    }\r\n\r\n    check(a,b){\r\n        if(this.graph[a].indexOf(b) < 0)\r\n            return false;\r\n        return true;\r\n    }\r\n\r\n    getNodeToPos(n){\r\n        let x = (n % this.n * this.width) + this.width / 2;\r\n        let z = (Math.floor(n / this.n) * this.width) + this.width / 2;\r\n        \r\n        return new THREE.Vector3(x,0,z);\r\n    }\r\n}\r\n\r\nexport {Maze}","/**\r\n * @author Lee Stemkoski\r\n *\r\n * Usage:\r\n * (1) create a global variable:\r\n *      var keyboard = new KeyboardState();\r\n * (2) during main loop:\r\n *       keyboard.update();\r\n * (3) check state of keys:\r\n *       keyboard.down(\"A\")    -- true for one update cycle after key is pressed\r\n *       keyboard.pressed(\"A\") -- true as long as key is being pressed\r\n *       keyboard.up(\"A\")      -- true for one update cycle after key is released\r\n *\r\n *  See KeyboardState.k object data below for names of keys whose state can be polled\r\n */\r\n\r\n// initialization\r\nvar KeyboardState = function()\r\n{\r\n    // bind keyEvents\r\n    document.addEventListener(\"keydown\", KeyboardState.onKeyDown, false);\r\n    document.addEventListener(\"keyup\",   KeyboardState.onKeyUp,   false);\r\n}\r\n\r\n///////////////////////////////////////////////////////////////////////////////\r\n\r\nKeyboardState.k =\r\n    {\r\n        8: \"backspace\",  9: \"tab\",       13: \"enter\",    16: \"shift\",\r\n        17: \"ctrl\",     18: \"alt\",       27: \"esc\",      32: \"space\",\r\n        33: \"pageup\",   34: \"pagedown\",  35: \"end\",      36: \"home\",\r\n        37: \"left\",     38: \"up\",        39: \"right\",    40: \"down\",\r\n        45: \"insert\",   46: \"delete\",   186: \";\",       187: \"=\",\r\n        188: \",\",      189: \"-\",        190: \".\",       191: \"/\",\r\n        219: \"[\",      220: \"\\\\\",       221: \"]\",       222: \"'\"\r\n    }\r\n\r\nKeyboardState.status = {};\r\n\r\nKeyboardState.keyName = function ( keyCode )\r\n{\r\n    return ( KeyboardState.k[keyCode] != null ) ?\r\n        KeyboardState.k[keyCode] :\r\n        String.fromCharCode(keyCode);\r\n}\r\n\r\nKeyboardState.onKeyUp = function(event)\r\n{\r\n    event.preventDefault();\r\n    var key = KeyboardState.keyName(event.keyCode);\r\n    if ( KeyboardState.status[key] )\r\n        KeyboardState.status[key].pressed = false;\r\n}\r\n\r\nKeyboardState.onKeyDown = function(event)\r\n{\r\n    event.preventDefault();\r\n    var key = KeyboardState.keyName(event.keyCode);\r\n    if ( !KeyboardState.status[key] )\r\n        KeyboardState.status[key] = { down: false, pressed: false, up: false, updatedPreviously: false };\r\n}\r\n\r\nKeyboardState.prototype.update = function()\r\n{\r\n    for (var key in KeyboardState.status)\r\n    {\r\n        // insure that every keypress has \"down\" status exactly once\r\n        if ( !KeyboardState.status[key].updatedPreviously )\r\n        {\r\n            KeyboardState.status[key].down        \t\t= true;\r\n            KeyboardState.status[key].pressed     \t\t= true;\r\n            KeyboardState.status[key].updatedPreviously = true;\r\n        }\r\n        else // updated previously\r\n        {\r\n            KeyboardState.status[key].down = false;\r\n        }\r\n\r\n        // key has been flagged as \"up\" since last update\r\n        if ( KeyboardState.status[key].up )\r\n        {\r\n            delete KeyboardState.status[key];\r\n            continue; // move on to next key\r\n        }\r\n\r\n        if ( !KeyboardState.status[key].pressed ) // key released\r\n            KeyboardState.status[key].up = true;\r\n    }\r\n}\r\n\r\nKeyboardState.prototype.down = function(keyName)\r\n{\r\n    return (KeyboardState.status[keyName] && KeyboardState.status[keyName].down);\r\n}\r\n\r\nKeyboardState.prototype.pressed = function(keyName)\r\n{\r\n    return (KeyboardState.status[keyName] && KeyboardState.status[keyName].pressed);\r\n}\r\n\r\nKeyboardState.prototype.up = function(keyName)\r\n{\r\n    return (KeyboardState.status[keyName] && KeyboardState.status[keyName].up);\r\n}\r\n\r\nKeyboardState.prototype.debug = function()\r\n{\r\n    var list = \"Keys active: \";\r\n    for (var arg in KeyboardState.status)\r\n        list += \" \" + arg\r\n    console.log(list);\r\n}\r\n\r\nexport default KeyboardState\r\n\r\n///////////////////////////////////////////////////////////////////////////////","import {scene} from './initScene.js'\r\nimport * as THREE from 'three'\r\n\r\nclass Car{\r\n    constructor(maze,camera = null,startCell = 0){\r\n        this.nowCell = startCell;\r\n        this.width = 10;\r\n        this.body = this.buildBody();\r\n        this.maze = maze;\r\n        this.rot = 0;\r\n        this.speed = 0;\r\n\r\n        if(camera){\r\n            camera.position.set(-40,60,0);\r\n            camera.lookAt(this.body.position.clone().add(new THREE.Vector3(-5,100,0)).sub(camera.position));\r\n            this.body.add(camera);\r\n        }\r\n        \r\n        this.body.position.copy(this.maze.getNodeToPos(startCell));\r\n\r\n        scene.add(this.body);\r\n    }\r\n\r\n    buildBody(){\r\n        let body = new THREE.Object3D();\r\n        let a = new THREE.Mesh(new THREE.CylinderGeometry(this.width,this.width,10,64),new THREE.MeshNormalMaterial());\r\n        let b = new THREE.Mesh(new THREE.BoxGeometry(this.width * 2,10,6),new THREE.MeshNormalMaterial());\r\n        b.position.set(this.width,0,0);\r\n        a.add(b);\r\n        a.position.y = 5;\r\n\r\n        body.add(a);\r\n\r\n        return body;\r\n    }\r\n\r\n    update(dt,keyboard){\r\n        keyboard.update();\r\n\r\n        if(keyboard.pressed('right')){\r\n            this.rot -= 0.03;\r\n        }\r\n        if(keyboard.pressed('left')){\r\n            this.rot += 0.03;\r\n        }\r\n        if(keyboard.pressed('up')){\r\n            this.speed += 0.2;\r\n        }\r\n        if(keyboard.pressed('down')){\r\n            this.speed -= 0.2;\r\n        }\r\n\r\n        let vel = new THREE.Vector3(this.speed, 0, 0);\r\n        vel.applyAxisAngle(new THREE.Vector3(0,1,0), this.rot);\r\n        \r\n        this.body.rotation.y = this.rot;\r\n        let nextPos = this.body.position.clone().add(vel.clone().multiplyScalar(dt));\r\n        if(this.checkNextPos(nextPos)){\r\n            this.body.position.add(vel.clone().multiplyScalar(dt));\r\n\r\n            let j = Math.floor(nextPos.x / this.maze.width);\r\n            let i = Math.floor(nextPos.z / this.maze.width);\r\n            this.nowCell = i * this.maze.n + j;\r\n        }\r\n        else this.speed /= 2;\r\n        \r\n    }\r\n\r\n    checkNextPos(nextPos){\r\n        let mazeWidth = this.maze.width * this.maze.n;\r\n        let mazeDepth = this.maze.width * this.maze.m;\r\n        if(nextPos.x >= 0 + this.width && nextPos.z >= 0 + this.width && nextPos.x <= mazeWidth - this.width && nextPos.z <= mazeDepth - this.width){\r\n            let dir = [[1,1],[-1,1],[1,-1],[-1,-1]];\r\n\r\n            for(let k = 0; k < 4; k++){\r\n                let j = Math.floor((nextPos.x + dir[k][0] * this.width) / this.maze.width);\r\n                let i = Math.floor((nextPos.z + dir[k][1] * this.width) / this.maze.width);\r\n\r\n                let nextCell = i * this.maze.n + j;\r\n                if(nextCell !== this.nowCell && !this.maze.check(nextCell,this.nowCell))\r\n                    return false;\r\n            }\r\n            \r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n\r\nexport default Car;","import * as THREE from 'three'\r\n\r\nclass HUD{\r\n    constructor(target) {\r\n        this.initHUD();\r\n\r\n        target.add(this.cameraHUD2);\r\n    }\r\n\r\n    initHUD(){\r\n        this.sceneHUD = new THREE.Scene();\r\n        this.cameraHUD1 = new THREE.OrthographicCamera(-10.1,10.1,10.1,-10.1,1,50);\r\n        this.cameraHUD2 = new THREE.OrthographicCamera(-175, 175, 175, -175, -350, 350);\r\n        this.cameraHUD2.position.set(0,15,0);\r\n        this.cameraHUD2.up.set(1,0,0);\r\n        this.cameraHUD2.lookAt(new THREE.Vector3());\r\n\r\n\r\n        var lineGeo = new THREE.Geometry();\r\n        lineGeo.vertices.push(\r\n            new THREE.Vector3(-10,-10,0),\r\n            new THREE.Vector3(10,-10,0),\r\n            new THREE.Vector3(10,10,0),\r\n            new THREE.Vector3(-10,10,0),\r\n            new THREE.Vector3(-10,-10,0),\r\n        );\r\n\r\n        var line = new THREE.Line(lineGeo, new THREE.LineBasicMaterial({color: 0xffffff}));\r\n        this.sceneHUD.add(line);\r\n    }\r\n}\r\n\r\nexport default HUD","import * as THREE from 'three'\r\nimport OrbitControls from 'three-orbitcontrols'\r\nimport {scene, initScene} from './initScene.js'\r\nimport {Maze} from './Maze.js'\r\nimport KeyboardState from './keyboard.js'\r\nimport Car from './Car.js'\r\nimport HUD from './HUD.js'\r\nimport NPC from './NPC.js'\r\n\r\nvar camera, renderer, stats, clock, controls, maze, hud;\r\nvar raycaster = new THREE.Raycaster(), mouse = new THREE.Vector2(),pickables = [];\r\nvar car, npc;\r\nvar keyboard = new KeyboardState();\r\n\r\nwindow.addEventListener('resize', onWindowResize, false);\r\ndocument.addEventListener('mousedown',onMouseDown,false);\r\n\r\ninit();\r\nanimate();\r\n\r\nfunction init() {\r\n\tinitScene();\r\n\t\r\n    clock = new THREE.Clock();\r\n\r\n    camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 10, 10000);\r\n    scene.add(camera);\r\n\r\n    var gridXZ = new THREE.GridHelper(500, 10, 'red', 'white');\r\n    //scene.add(gridXZ);\r\n    gridXZ.position.set(250, 0, 250);\r\n    //gridXZ.rotation.x = Math.PI / 2;\r\n    scene.add(new THREE.AxisHelper(50));\r\n\r\n\r\n    renderer = new THREE.WebGLRenderer();\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.setClearColor(0x888888);\r\n    renderer.autoClear = false;\r\n\r\n    //controls = new OrbitControls(camera, renderer.domElement);\r\n    //controls.enableKeys = false;\r\n\r\n    document.body.appendChild(renderer.domElement);\r\n\t\r\n    maze = new Maze(5,5,50,5,50);\r\n    \r\n    maze.wall.forEach(function(e){\r\n        pickables.push(e);\r\n    });\r\n\r\n    car = new Car(maze,camera);\r\n    hud = new HUD(car.body);\r\n    ////\r\n    let t = new THREE.Mesh(new THREE.CylinderGeometry(15,15,100,64), new THREE.MeshBasicMaterial({color: 0x0000ff}));\r\n    t.position.set(475,50,475);\r\n\r\n    scene.add(t);\r\n\r\n    let plane = new THREE.Mesh(new THREE.PlaneGeometry(500,500), new THREE.MeshBasicMaterial({color: 0xc6793c}))\r\n    plane.rotation.x = -Math.PI / 2;\r\n    plane.position.set(250,0,250);\r\n    scene.add(plane);\r\n    ////\r\n\r\n    npc = new NPC(maze);\r\n}\r\n\r\nfunction onWindowResize() {\r\n    var width = window.innerWidth;\r\n    var height = window.innerHeight;\r\n    camera.aspect = width / height;\r\n    camera.updateProjectionMatrix();\r\n    renderer.setSize(width, height);\r\n}\r\n\r\nfunction animate() {\r\n    var dt = clock.getDelta();\r\n    car.update(dt,keyboard);\r\n    npc.update(dt);\r\n\r\n    requestAnimationFrame(animate);\r\n    render();\r\n}\r\n\r\nfunction render() {\r\n    var WW = window.innerWidth;\r\n    var HH = window.innerHeight;\r\n\r\n    renderer.setScissorTest(true);\r\n    renderer.setViewport(0,0,WW,HH);\r\n    renderer.setScissor(0,0,WW,HH);\r\n    renderer.clear();\r\n    renderer.render(scene,camera);\r\n\r\n    renderer.setViewport(WW * 0.7, 0, WW * 0.3, HH * 0.3);\r\n    renderer.setScissor(WW * 0.7, 0, WW * 0.3, HH * 0.3);\r\n    renderer.clear();\r\n    renderer.render(scene,hud.cameraHUD2);\r\n    renderer.render(hud.sceneHUD,hud.cameraHUD1);\r\n}\r\n\r\nfunction onMouseDown(e){\r\n    e.preventDefault();\r\n    mouse.x = (e.clientX / window.innerWidth) * 2 - 1;\r\n    mouse.y = -(e.clientY / window.innerHeight) * 2 + 1;\r\n\r\n    raycaster.setFromCamera(mouse, camera);\r\n    var intersects = raycaster.intersectObjects(pickables);\r\n    if(intersects.length > 0){\r\n        console.log(intersects[0]);\r\n        \r\n        if('mazeData' in intersects[0].object){\r\n            scene.remove(intersects[0].object);\r\n            maze.removeWall(intersects[0].object.mazeData);\r\n        }\r\n        \r\n    }\r\n\r\n}","import * as THREE from 'three'\r\nimport {scene} from './initScene.js'\r\nimport Car from './Car.js'\r\n\r\nclass NPC extends Car{\r\n    constructor(maze,camera = null,startCell = 0){\r\n        super(maze,camera,startCell);\r\n\r\n        this.NPCStateTable = Object.freeze({\"initState\" : 1,\"findNextPoint\" : 2,\"GoToPoint\" : 3});\r\n        this.NPCState = this.NPCStateTable.initState;\r\n        this.isTraverse = new Array(maze.m * maze.n);\r\n        this.targetNode = new THREE.Vector3();\r\n        this.target = 0;\r\n        this.stackPath = [];\r\n        this.speed = 60;\r\n    }\r\n\r\n    findNextPoint(){\r\n        // use DFS\r\n\r\n        this.isTraverse[this.nowCell] = true;\r\n\r\n        let node, find = false;\r\n        for(let i = 0; i < this.maze.graph[this.nowCell].length; i++){\r\n            if(!this.isTraverse[this.maze.graph[this.nowCell][i]]){\r\n                this.stackPath.push(this.nowCell);\r\n                node = this.maze.graph[this.nowCell][i];\r\n                find = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(!find && this.stackPath.length == 0){\r\n            return false;\r\n        }\r\n        else if(!find){\r\n            node = this.stackPath[this.stackPath.length - 1]\r\n            this.stackPath.pop();\r\n        }\r\n\r\n        this.target = node;\r\n        this.targetNode.copy(this.maze.getNodeToPos(node));\r\n\r\n        return true;\r\n    }\r\n\r\n    GoToPoint(dt){\r\n        let vel = this.targetNode.clone().sub(this.body.position).normalize().multiplyScalar(dt * this.speed);\r\n        \r\n        this.body.position.add(vel);\r\n\r\n        this.body.rotation.y = Math.acos(vel.x / vel.length());\r\n        if(vel.z > 0)\r\n            this.body.rotation.y *= -1;\r\n\r\n        if(this.targetNode.clone().sub(this.body.position).length() < 3){\r\n            this.nowCell = this.target;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    update(dt){\r\n        let res;\r\n        switch (this.NPCState) {\r\n            case this.NPCStateTable.initState:\r\n                this.isTraverse.fill(false);\r\n                this.isTraverse[this.nowCell] = true;\r\n                this.NPCState = this.NPCStateTable.findNextPoint;\r\n            case this.NPCStateTable.findNextPoint:\r\n                res = this.findNextPoint();\r\n                if(res)\r\n                    this.NPCState = this.NPCStateTable.GoToPoint;\r\n                else {\r\n                    this.NPCState = this.NPCStateTable.initState;\r\n                    break;\r\n                }\r\n                    \r\n            case this.NPCStateTable.GoToPoint:\r\n                res = this.GoToPoint(dt);\r\n                if(res)\r\n                    this.NPCState = this.NPCStateTable.findNextPoint;\r\n            break;\r\n        }\r\n    }\r\n}\r\n\r\nexport default NPC"],"sourceRoot":""}